apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
    {{- if .Values.imagePullSecret.secretName }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.secretName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
{{- /*
        This is the ffmpeg container
*/}}
        - name: {{ .Chart.Name }}-ffmpeg
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- /*
        Need to update env to use variable similar to the docker-compose scripts
*/}}
          env:
          - name: USP_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "chart.fullname" . }}-license-key
                key: USP_LICENSE_KEY
          {{- with .Values.env }}
          {{ toYaml . | trim | indent 10 }}
{{- /*
        This is the Origin container - ** NEEDS CONFIGURING / FINISHING **
*/}}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: USP_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "chart.fullname" . }}-license-key
                key: USP_LICENSE_KEY
          {{- with .Values.env }}
          {{ toYaml . | trim | indent 10 }}
          {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
