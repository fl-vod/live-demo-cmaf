apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.ffmpegPullSecret.secretName }}
      {{- if .Values.originPullSecret.secretName }}
      imagePullSecrets:
        - name: {{ .Values.ffmpegPullSecret.secretName }}
        - name: {{ .Values.originPullSecret.secretName }}
      {{- end }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: ffmpega
          image: "{{ .Values.ffmpegImage.repository }}:{{ .Values.ffmpegImage.tag }}"
          imagePullPolicy: "{{ .Values.ffmpegImage.pullPolicy }}"
          env:
          - name: PUB_POINT_URI
            value: {{ .Values.ffmpeg.pub_point_uri }}
          - name: TRACKS
            value: {{ .Values.ffmpeg.tracks | toJson | quote }}
          {{- with .Values.env }}
          {{ toYaml . | trim | indent 10 }}
          {{ end }}
        - name: ffmpegb
          image: "{{ .Values.ffmpegImage.repository }}:{{ .Values.ffmpegImage.tag }}"
          imagePullPolicy: "{{ .Values.ffmpegImage.pullPolicy }}"
          env:
          - name: PUB_POINT_URI
            value: {{ .Values.ffmpeg.pub_point_uri }}
          - name: TRACKS
            value: {{ .Values.ffmpeg.tracks | toJson | quote }}
          {{- with .Values.env }}
          {{ toYaml . | trim | indent 10 }}
          {{ end }}
        - name: liveorigin
          image: "{{.Values.originImage.repository }}:{{ .Values.originImage.tag }}"
          imagePullPolicy: "{{ .Values.originImage.pullPolicy }}"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: CHANNEL
            value: "{{ .Values.liveorigin.channel }}"
          - name: PUB_POINT_OPTS
            value: "{{ .Values.liveorigin.pub_point_opts }}"
          - name: USP_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "chart.fullname" . }}-license-key
                key: USP_LICENSE_KEY
          {{- with .Values.env }}
{{ toYaml . | trim | indent 10 }}
          {{ end }}
          {{- with .Values.env }}
          {{ toYaml . | trim | indent 10 }}
          {{ end }}
